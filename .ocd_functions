# Functions and usage:
#   ocd-restore:        pull from git master and copy files to homedir
#   ocd-backup:         push local changes to master
#   ocd-status:         check if OK or Behind
#   ocd-missing-debs:   compare system against ~/.favdebs and report missing
#   ocd-extra-debs:     compare system against ~/.favdebs and report extras

IGNORE_RE="^\./(README|\.git/)"
INSTALL_FROM="git@github.com:obeyeater/ocd.git"
OCD_DIR="$HOME/.ocd"

ocd-restore () {
  if [ ! -d "$ocddir" ]; then
    echo "$ocddir: doesn't exist!" && continue
  fi
  pushd $ocddir >/dev/null
  echo "$ocddir: git-pull:"
  git pull || {
    echo "error: couldn't git-pull; check status in $ocddir" 1>&2
    popd >/dev/null && return 1
  }

  files=$(find . -type f | egrep -v  "$IGNORE_RE")
  dirs=$(find . -type d | egrep -v  "$IGNORE_RE")

  for dir in $dirs; do
    mkdir -p $HOME/$dir
  done

  echo -n "OCD: restoring"
  for file in $files; do
    echo -n .
    src="$file"
    dst="$HOME/$file"
    if [ -f $dst ]; then
      rm -f $dst
    fi
    ln $file $dst
  done
  echo

  # Some changes require cleanup that OCD won't handle; e.g., if you rename
  # a file the old file will remain. Housekeeping commands that need to be
  # run may be put in $ocddir/.ocd_cleanup; they run only once.
  if ! cmp $HOME/.ocd_cleanup{,_ran} &>/dev/null; then
    echo -e "OCD: running $HOME/.ocd_cleanup:"
    $HOME/.ocd_cleanup && cp $HOME/.ocd_cleanup{,_ran}
  fi
  popd >/dev/null
}

ocd-backup () {
  pushd $OCD_DIR >/dev/null
  echo -e "git status in `pwd`:\n"
  git status
  if ! git status | grep -q "working directory clean"; then
    echo -e "\n\ngit diff in `pwd`:\n"
    git diff
    echo -n "Commit and push now? (yes/no): "
    read ANS
    if [ $ANS == "yes" ];then
      git commit -a && git push
    fi
  fi
  popd >/dev/null
}

ocd-status () {
  pushd $OCD_DIR >/dev/null
  git remote update &>/dev/null
  if git status -uno | grep -q behind; then
    echo "Behind"
    popd >/dev/null && return 1
  else
    echo "OK"
    popd >/dev/null && return 0
  fi
  echo "Error"
  popd >/dev/null && return 1
}

ocd-missing-debs () {
  [ -f $HOME/.favdebs ] || touch $HOME/.favdebs
  dpkg --get-selections | grep '\sinstall$' | awk '{print $1}' | sort \
      | comm -13 - <(egrep -v '(^-|^ *#)' $HOME/.favdebs \
      | sed 's/ *#.*$//' |sort)
}

ocd-extra-debs () {
  [ -f $HOME/.favdebs ] || touch $HOME/.favdebs
  dpkg --get-selections | grep '\sinstall$' | awk '{print $1}' | sort \
      | comm -12 - <(grep -v '^ *#' $HOME/.favdebs | grep '^-' | cut -b2- \
      | sed 's/ *#.*$//' |sort)
}

ocd-add () {
  if [ ! -f "$1" ];then
    echo "Usage: ocd-add <filename>"
    return 1
  fi
  base=$(basename $1)
  abspath=$(cd "`dirname $1`";pwd)
  relpath=${abspath/#$HOME\//}
  if [ "${HOME}/${relpath}/$base" != "${abspath}/${base}" ]; then
    echo "$1 is not in $HOME"
    return 1
  fi
  mkdir -p ${OCD_DIR}/${relpath}
  ln -f ${HOME}/${relpath}/${base} $OCD_DIR/${relpath}/${base}
  pushd $OCD_DIR >/dev/null
  git add ${relpath}/${base} && echo "Added: $1"
  popd >/dev/null
}

# Check if installed. If it's not, try to install it.
if [ ! -d "$OCD_DIR/.git" ]; then
  GetIdentities () { ssh-add -l 2>/dev/null |awk '{print $3}' |sort |xargs; }
  identities="$(GetIdentities)"
  echo "OCD is not installed!"
  [ -z "$identities" ] && ssh-add
  if [ -z "$(GetIdentities)" ]; then
    echo "No SSH identities available; please copy them from another host."
    return 1
  fi
  echo -n "Enter to continue fetch, ctrl-c to abort."
  read IN
  echo "Checking for git..."
  which git || sudo apt-get install git-core
  git clone $INSTALL_FROM "$HOME/.ocd" && \
    echo "Done fetching; run ocd-restore to finish."
fi
